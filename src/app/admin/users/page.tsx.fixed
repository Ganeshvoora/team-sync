'use client'

import React, { useState, useEffect } from 'react'
import PageHeader from '@/components/PageHeader'
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger, DialogClose } from "@/components/ui/dialog"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Search, User, Mail, Phone, MapPin, Calendar, Building2, UserCheck, MoreHorizontal, Shield, AlertCircle } from 'lucide-react'

interface User {
  id: string
  name: string
  email: string
  employeeId: string
  role: {
    id: string
    name: string
    level: number
  }
  department: {
    id: string
    name: string
  } | null
  manager: {
    id: string
    name: string
  } | null
}

interface Role {
  id: string
  name: string
  level: number
}

interface Department {
  id: string
  name: string
}

export default function AdminUsersPage() {
  const [users, setUsers] = useState<User[]>([])
  const [roles, setRoles] = useState<Role[]>([])
  const [departments, setDepartments] = useState<Department[]>([])
  const [loading, setLoading] = useState(true)
  const [showAddForm, setShowAddForm] = useState(false)
  const [currentUser, setCurrentUser] = useState<any>(null)
  const [selectedUser, setSelectedUser] = useState<User | null>(null)
  const [newUser, setNewUser] = useState({
    name: '',
    email: '',
    employeeId: '',
    roleId: '',
    departmentId: '',
    managerId: ''
  })
  const [message, setMessage] = useState('')

  useEffect(() => {
    fetchData()
  }, [])

  const fetchData = async () => {
    try {
      const [usersRes, rolesRes, deptRes, userRes] = await Promise.all([
        fetch('/api/users'),
        fetch('/api/roles'),
        fetch('/api/departments'),
        fetch('/api/user/current')
      ])

      if (usersRes.ok) {
        const usersData = await usersRes.json()
        setUsers(usersData)
      }

      if (rolesRes.ok) {
        const rolesData = await rolesRes.json()
        setRoles(rolesData)
      }

      if (deptRes.ok) {
        const deptData = await deptRes.json()
        setDepartments(deptData)
      }

      if (userRes.ok) {
        const userData = await userRes.json()
        setCurrentUser(userData)
      }
    } catch (error) {
      console.error('Error fetching data:', error)
    } finally {
      setLoading(false)
    }
  }

  const isAdmin = currentUser?.role?.name === 'Admin' || currentUser?.role?.name === 'CEO'
  const visibleUsers = isAdmin ? users : users.filter(user => 
    user.department?.id === currentUser?.department?.id || !user.department
  )

  if (loading) {
    return (
      <div className="p-4">
        <PageHeader title="User Management" subtitle="Admin Panel" />
        <div className="flex items-center justify-center h-64">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 dark:border-white"></div>
        </div>
      </div>
    )
  }

  return (
    <div className="p-4">
      <PageHeader title="User Management" subtitle="Admin Panel" />
      <div className="bg-white/10 backdrop-blur-xl rounded-xl border border-white/20 p-8">
        <div className="flex justify-between items-center mb-6">
          <div>
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">System Users</h2>
            <p className="text-blue-700 dark:text-blue-200 font-medium">Manage user accounts, roles, and departments</p>
          </div>
          <button
            onClick={() => setShowAddForm(true)}
            className="inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md font-semibold text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            <User className="mr-2 h-4 w-4" />
            Add User
          </button>
        </div>

        {/* Rest of your UI components */}
        {/* I'm preserving just the structure here. You would want to keep all your original UI components */}
      </div>
    </div>
  )
}
